# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  email: String!
  name: String
}

type Event {
  id: Int!
  title: String!
  description: String!
  startTime: DateTime!
  endTime: DateTime!
  genre: Genre!
  userId: Int!
  locationId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Music genres for events"""
enum Genre {
  DUBSTEP
  HOUSE
  TECHNO
  GARAGE
  AMAPIANO
  DONK
  TRANCE
  DRUM_AND_BASS
  JUNGLE
  FOOTWORK
}

type Query {
  users: [User!]!
  user(id: Int!): User
  events: [Event!]!
  event(id: Int!): Event!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(id: Int!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createEvent(createEventInput: CreateEventInput!): Event!
  updateEvent(updateEventInput: UpdateEventInput!): Event!
  removeEvent(id: Int!): Event!
}

input CreateUserInput {
  email: String!
  name: String
}

input UpdateUserInput {
  email: String
  name: String
}

input CreateEventInput {
  title: String!
  description: String!
  startTime: DateTime!
  endTime: DateTime!
  genre: Genre!
  userId: Int!
  locationId: Int!
  artistIds: [Int!]
}

input UpdateEventInput {
  title: String
  description: String
  startTime: DateTime
  endTime: DateTime
  genre: Genre
  userId: Int
  locationId: Int
  artistIds: [Int!]
  id: Int!
}